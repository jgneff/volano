//
// Licensed to the Apache Software Foundation (ASF) under one or more
// contributor license agreements.  See the NOTICE file distributed with
// this work for additional information regarding copyright ownership.
// The ASF licenses this file to You under the Apache License, Version 2.0
// (the "License"); you may not use this file except in compliance with
// the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// ============================================================================
// catalina.corepolicy - Security Policy Permissions for Tomcat 4.0
//
// This file contains a default set of security policies to be enforced (by the
// JVM) when Catalina is executed with the "-security" option.  In addition
// to the permissions granted here, the following additional permissions are
// granted to the codebase specific to each web application:
//
// * Read access to the document root directory
//
// $Id: catalina.policy 743401 2009-02-11 17:01:58Z markt $
// ============================================================================


// ========== SYSTEM CODE PERMISSIONS =========================================


// These permissions apply to javac
grant codeBase "file:${java.home}/lib/-" {
  permission java.security.AllPermission;
};

// These permissions apply to all shared system extensions
grant codeBase "file:${java.home}/jre/lib/ext/-" {
  permission java.security.AllPermission;
};

// These permissions apply to javac when ${java.home] points at $JAVA_HOME/jre
grant codeBase "file:${java.home}/../lib/-" {
  permission java.security.AllPermission;
};

// These permissions apply to all shared system extensions when
// ${java.home} points at $JAVA_HOME/jre
grant codeBase "file:${java.home}/lib/ext/-" {
  permission java.security.AllPermission;
};


// ========== WEB APPLICATION PERMISSIONS =====================================


// These permissions are granted by default to all web applications
// In addition, a web application will be given a read FilePermission
// and JndiPermission for all files and directories in its document root.
grant {
  // Required for JNDI lookup of named JDBC DataSource's and
  // javamail named MimePart DataSource used to send mail
  permission java.util.PropertyPermission "java.home", "read";
  permission java.util.PropertyPermission "java.naming.*", "read";
  permission java.util.PropertyPermission "javax.sql.*", "read";

  // OS Specific properties to allow read access
  permission java.util.PropertyPermission "os.name", "read";
  permission java.util.PropertyPermission "os.version", "read";
  permission java.util.PropertyPermission "os.arch", "read";
  permission java.util.PropertyPermission "file.separator", "read";
  permission java.util.PropertyPermission "path.separator", "read";
  permission java.util.PropertyPermission "line.separator", "read";

  // JVM properties to allow read access
  permission java.util.PropertyPermission "java.version", "read";
  permission java.util.PropertyPermission "java.vendor", "read";
  permission java.util.PropertyPermission "java.vendor.url", "read";
  permission java.util.PropertyPermission "java.class.version", "read";
  permission java.util.PropertyPermission "java.specification.version", "read";
  permission java.util.PropertyPermission "java.specification.vendor", "read";
  permission java.util.PropertyPermission "java.specification.name", "read";

  permission java.util.PropertyPermission "java.vm.specification.version", "read";
  permission java.util.PropertyPermission "java.vm.specification.vendor", "read";
  permission java.util.PropertyPermission "java.vm.specification.name", "read";
  permission java.util.PropertyPermission "java.vm.version", "read";
  permission java.util.PropertyPermission "java.vm.vendor", "read";
  permission java.util.PropertyPermission "java.vm.name", "read";

  // Required for getting BeanInfo
  permission java.lang.RuntimePermission "accessClassInPackage.sun.beans";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.beans.*";

  // Required for sevlets and JSP's
  permission java.lang.RuntimePermission "accessClassInPackage.org.apache.catalina.util";
  permission java.lang.RuntimePermission "accessClassInPackage.org.apache.catalina.util.*";
  permission java.lang.RuntimePermission "defineClassInPackage.org.apache.catalina.util";
  permission java.lang.RuntimePermission "defineClassInPackage.org.apache.catalina.util.*";

  // Required for running servlets generated by JSPC
  permission java.lang.RuntimePermission "accessClassInPackage.org.apache.jasper.runtime";
  permission java.lang.RuntimePermission "accessClassInPackage.org.apache.jasper.runtime.*";

  // Required for OpenJMX
  permission java.lang.RuntimePermission "getAttribute";

  // Allow read of JAXP compliant XML parser debug
  permission java.util.PropertyPermission "jaxp.debug", "read";
};


// ========== VOLANO SERVER PERMISSIONS (INCLUDING TOMCAT) ====================


// VOLANO chat server and Apache Tomcat servlet container
grant codeBase "file:${catalina.home}/lib/*" {
    permission java.security.AllPermission;
};


// ========== VOLANO SERVLET PERMISSIONS ======================================


// Uncomment permissions below as required. To debug security permissions,
// add the following Java system property:
//   -Djava.security.debug=access,failure

// COM.volano.ConfigServlet, COM.volano.ProxyServlet
grant codeBase "file:${catalina.home}/webapps/ROOT/WEB-INF/lib/volano-chat-servlets.jar" {
    permission java.util.PropertyPermission "org.apache.coyote.USE_CUSTOM_STATUS_MSG_IN_HEADER", "read";
    permission java.util.PropertyPermission "install.root", "read";
    permission java.util.PropertyPermission "applet.codebase", "read";
    permission java.util.PropertyPermission "admin.password", "read";

    // The ConfigServlet needs write access to any applet property files it modifies.
    // permission java.io.FilePermission "${catalina.home}${/}webapps${/}ROOT${/}vcclient${/}dutch.txt", "write";
    // permission java.io.FilePermission "${catalina.home}${/}webapps${/}ROOT${/}vcclient${/}english.txt", "write";
    // permission java.io.FilePermission "${catalina.home}${/}webapps${/}ROOT${/}vcclient${/}french.txt", "write";
    // permission java.io.FilePermission "${catalina.home}${/}webapps${/}ROOT${/}vcclient${/}german.txt", "write";
    // permission java.io.FilePermission "${catalina.home}${/}webapps${/}ROOT${/}vcclient${/}italian.txt", "write";
    // permission java.io.FilePermission "${catalina.home}${/}webapps${/}ROOT${/}vcclient${/}monitor.txt", "write";
    // permission java.io.FilePermission "${catalina.home}${/}webapps${/}ROOT${/}vcclient${/}portuguese.txt", "write";
    // permission java.io.FilePermission "${catalina.home}${/}webapps${/}ROOT${/}vcclient${/}spanish.txt", "write";

    // The ProxyServlet needs permission to connect to any remote ad servers
    // invoked through it by the BannerPlayer applet.
    // permission java.net.SocketPermission "www.example.com:80", "connect";
};

